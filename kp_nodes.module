<?php

require_once 'theme/template.php';

/**
 * General functions for KnowPulse Content types
 */

function kp_nodes_theme($existing, $type, $theme, $path) {

  $items = array(
    'node__uofs_research_area' => array(
      'template' => 'node--generic',
      'render element' => 'node',
      'base hook' => 'node',
      'path' => "$path/theme",
    ),
  );

  return $items;
}

/**
 * Implements hook_node_view().
 * Acts on all content types.
 */
function kp_nodes_node_view($node, $view_mode, $langcode) {
  switch ($node->type) {
    case 'uofs_research_area':
      if ($view_mode == 'full') {
        $node->content['kp_toc'] = array(
          '#markup' => "<div id=\"$node->type-tripal-toc-block\" class=\"tripal-toc-block\"></div>"
        );

        // create a base section including the body and thumbnail image field
        $node->content['uofs_research_area_base'] = array(
          '#type' => 'container',
          '#tripal_toc_id'    => 'base',
          '#tripal_toc_title' => 'Overview',
          '#attributes' => array(
            'class' => array('uofs-research-area-base'),
          ),
          'body' => $node->content['body'],
          'field_page_thumnail' => $node->content['field_page_thumnail'],
          '#weight' => -100,
        );
        unset($node->content['body'], $node->content['field_page_thumnail']);
      }
      break;

    case 'chado_organism':
      if ($view_mode == 'full') {

        unset($node->content['tripal_organism_feature_browser']);

        // Remove the field image with source since it will be rendered
        // in the overview instead of as it's own pane.
        unset($node->content['field_image_with_source']);

        // Remove the nurtient facts if it's empty.
        $field_collection = $node->content['field_nutrition'][0]['entity']['field_collection_item'];
        $nutrient_facts = array_shift($field_collection);
        if (sizeof($nutrient_facts['field_nutrition_data'][0]['#rows']) == 1) {
          unset($node->content['field_nutrition']);
        }

        $node->content['tripal_organism_feature_counts']['#tripal_toc_title'] = 'Sequence & Variant Data';
        $node->content['tripal_organism_feature_counts']['#weight'] = 2;

        $node->content['tripal_organism_stocks']['#tripal_toc_title'] = 'Germplasm Data';
        $node->content['tripal_organism_stocks']['#weight'] = 1;
      }
      break;
    case 'chado_project':

      // Hide the date field since we will render it manually in the overview.
      unset($node->content['field_date_month_year']);

      // Change the name of the relationships pane.
      $node->content['tripal_project_relationships']['#tripal_toc_title'] = 'Related Projects';

      // Remove the Long description since it will be rendered manually in
      // the overview.
      unset($node->content['field_long_description']);

      break;
  }
}

/**
 * After the node is built, we want to add instructions to each
 * content section letting the administrator know which template
 * they can customize
 *
 * @param $build
 */
function kp_nodes_node_view_alter(&$build) {
  global $theme;

  $node_types = array('uofs_research_area');

  // if the $build['kp_toc'] element is not present, then this is not
  // a full node view so we do not want to alter
  if (!array_key_exists('kp_toc', $build)) {
    return;
  }

  $cache = cache_get("theme_registry:$theme", 'cache');
  $node = $build['#node'];
  $toc = array();
  $toc_html = '';

  // if we are looking at a Tripal node template then we want to
  // make some changes to each block of content so that we can associate
  // a table of contents and add administrator and curator messages
  if (in_array($node->type, $node_types)) {

    // iterate through all the elements of the $build array and for those
    // that are wanting to provide content for this node
    $markup = array();
    foreach ($build as $key => $value) {

      // examine elements without a '#' prefix as these should be adding
      // contents to the page. Skip the table of contents and links as those
      // will be placed elsewhere
      if (!preg_match('/^#/', $key) and $key != 'kp_toc' and $key != 'links') {

        //-----------------------
        // INITIALIZE THE CONTENT VARIABLES
        //-----------------------
        $toc_item_title = $key;
        $toc_item_id    = $key;
        $toc_item_link  = '';

        // get the title for the table of contents.  Tripal templates should
        // have a '#tripal_toc_title' element in the build array
        if (array_key_exists('#tripal_toc_title', $build[$key])) {
          $toc_item_title = $build[$key]['#tripal_toc_title'];
        }
        // other elements in the $build array may just have a '#title' element,
        if (array_key_exists('#title', $build[$key])) {
          $toc_item_title = $build[$key]['#title'];
        }
        $toc_item_title = ucwords($toc_item_title);

        if (array_key_exists('#tripal_toc_id', $build[$key])) {
          $toc_item_id = $build[$key]['#tripal_toc_id'];
        }
        $toc_item_link = "<div class=\"tripal_toc_list_item\"><a id=\"$toc_item_id\" class=\"tripal_toc_list_item_link\" href=\"?block=$toc_item_id\">$toc_item_title</a></div>";

        //-----------------------
        // SET THE WEIGHTS FOR THE TOC ELEMENTS
        //-----------------------
        // set the weight of the TOC item and add it to our $toc array
        // for building of the TOC below
        $weight = 0;
        if (array_key_exists('#weight', $build[$key])) {
          $weight = $build[$key]['#weight'];
        }

        //-----------------------
        // GET THE MARKUP FOR EACH ELEMENT
        //-----------------------
        $markup = '';

        // find the markup. Some fields will have a '#markup' and others, such
        // as CCK elements may have a set of '#markup' elements organized by
        // numerical keys.
        if (array_key_exists('#markup', $build[$key]) and trim($build[$key]['#markup'])) {
          $markup = $build[$key]['#markup'];
        }
        // For backwards copmatibility we should support the '#value' element as well.
        elseif (array_key_exists('#value', $build[$key]) and trim($build[$key]['#value'])) {
          $markup = $build[$key]['#markup'];
        }

        // if we have no '#markup' field then this element has not yet
        // been rendered.  Let's render it and substitute that for markup
        if (!$markup) {
          $markup = trim(render($build[$key]));
          $build[$key] = array(
            '#markup' => $markup,
          );
        }

        // if we still don't have markup then skip this one
        if (!$markup) {
          continue;
        }

        //-----------------------
        // FIND THE TEMPLATE PATH
        //-----------------------
        // get the template path so we can put it in an admin message box
        $path = '';
        if (array_key_exists($key, $cache->data) and array_key_exists('path', $cache->data[$key])) {

          $path = $cache->data[$key]['path'] . '/' . $key . '.tpl.php';

          $path = tripal_set_message("Administrators, you can
            customize the way the content above is presented.  Tripal provides a template
            file for each block of content.  To customize, copy the template file to your
            site's default theme, edit then " .
            l('clear the Drupal cache', 'admin/config/development/performance', array('attributes' => array('target' => '_blank'))) . ".
            Currently, the content above is provided by this template: <br><br>$path",
            TRIPAL_INFO,
            array('return_html' => 1)
          );
        }

        //-----------------------
        // CREATE THE DATA BLOCK
        //-----------------------
        // add a surrounding <div> box around the content
        $updated_markup = "
          <div id=\"$toc_item_id-tripal-data-block\" class=\"tripal-data-block\">
            <div class=\"$toc_item_id-tripal-data-block-title tripal-data-block-title\">$toc_item_title</div>
              $markup
              $path
            </div>
          </div>
        ";

        $build[$key]['#markup'] = $updated_markup;
        $build[$key]['#weight'] = $weight;

        //-----------------------
        // Set the TOC Item
        //-----------------------
        $toc[$weight][$toc_item_title] = $toc_item_link;
      }
    }
  }

  //-----------------------
  // BUILD THE TABLE OF CONTENTS LINKS
  //-----------------------
  // first sort the links numerically by their weight
  ksort($toc, SORT_NUMERIC);
  $toc_html = '';
  foreach ($toc as $weight => $links) {
    // for links in the same weight, sort them alphabetically
    ksort($links);
    foreach ($links as $toc_item_title => $toc_item_link) {
      $toc_html .= $toc_item_link;
    }
  }
  $build['kp_toc']['#markup'] = "<div id=\"$node->type-tripal-toc-block\" class=\"tripal-toc-block\">$toc_html</div>";
}