<?php
/**
 * The page generated by this template depends on the publication type.  Each
 * publication type may appear differently. You can find the publication
 * templates for each type in the pub_types folder. The files have the same
 * name as the type.  If a publication type is not found in that file then the
 * generic.inc template is used for display of the publication.
 */

// GET THE VARIABLES I NEED
//---------------------------

$pub = $variables['node']->pub;

// expand the title
$pub = chado_expand_var($pub, 'field', 'pub.title');
$pub = chado_expand_var($pub, 'field', 'pub.volumetitle');

// get the citation
$values = array(
  'pub_id' => $pub->pub_id,
  'type_id' => array(
    'name' => 'Citation',
  ),
);
$citation = chado_generate_var('pubprop', $values);
$citation = chado_expand_var($citation, 'field', 'pubprop.value');

// get the abstract
$values = array(
  'pub_id' => $pub->pub_id,
  'type_id' => array(
    'name' => 'Abstract',
  ),
);
$abstract = chado_generate_var('pubprop', $values);
$abstract = chado_expand_var($abstract, 'field', 'pubprop.value');
$abstract_text = '';
if ($abstract) {
  $abstract_text = htmlspecialchars($abstract->value);
}

// get the author list
// expand the pub to include the pubauthors.
$options = array(
  'return_array' => 1,
  'order_by' => array('rank' => 'ASC'),
);
$pub = chado_expand_var($pub, 'table', 'pubauthor', $options);

// see if we have authors as contacts if so then we'll add this resource

$authors = array();
if (count($pub->pubauthor)) {
  foreach ($pub->pubauthor as $details) {
  
    // expand the author to include the pubauthor_contact table records
    $options = array(
      'return_array' => 1,
      'include_fk' => array(
        'contact_id' => 1,
      ),
    );
    $details = chado_expand_var($details, 'table', 'pubauthor_contact', $options);
    
    $author = $details->surname . ' ' . $details->givennames;
    
    // Add the contact link if existing.
    if ($details->pubauthor_contact) {
      $contact_id = $details->pubauthor_contact[0]->contact_id->contact_id;
      if ($contact_id) {
        $nid = chado_get_nid_from_id('contact', $contact_id);
        if ($nid) {
          $author = l($author, 'node/'.$nid);
        }
      }
    }
    
    $authors[$details->rank] = $author;
  }
  $author_list = implode(', ', $authors);
}
else {
  $values = array(
    'pub_id' => $pub->pub_id,
    'type_id' => array(
      'name' => 'Authors',
    ),
  );
  $authors = chado_generate_var('pubprop', $values);
  $authors = chado_expand_var($authors, 'field', 'pubprop.value');
  $authors_list = 'N/A';
  if ($authors) {
    $authors_list = $authors->value;
  }
}

// get the URL
$values = array(
  'pub_id' => $pub->pub_id,
  'type_id' => array(
    'name' => 'URL',
  ),
);
$options = array('return_array' => 1);
$urls = chado_generate_var('pubprop', $values, $options);
$urls = chado_expand_var($urls, 'field', 'pubprop.value');
$url = '';
if (count($urls) > 0) {
  $url = $urls[0]->value;
} 

// Get the properties
$options = array(
  'return_array' => 1,
  'order_by' => array('rank' => 'ASC'),
);
$pub = chado_expand_var($pub,'table', 'pubprop', $options);
$pubprops = $pub->pubprop;
$properties = array();
if (is_array($pubprops)) {
  foreach ($pubprops as $property) {
    // skip the following properties as those are already on other templates
    if ($property->type_id->name == 'Abstract' or
        $property->type_id->name == 'Citation' or
        $property->type_id->name == 'Publication Dbxref' or
        $property->type_id->name == 'Authors' or
        $property->type_id->name == 'Structured Abstract Part')  {
      continue;
    }
    $property = chado_expand_var($property,'field','pubprop.value');
    $properties[] = $property;
  }
} 
?>

<div class="tripal_pub-data-block-desc tripal-data-block-desc"></div> <?php

// BUILD THE TABLE
//---------------------------

// the $headers array is an array of fields to use as the colum headers.
// additional documentation can be found here
// https://api.drupal.org/api/drupal/includes%21theme.inc/function/theme_table/7
// This table for the analysis has a vertical header (down the first column)
// so we do not provide headers here, but specify them in the $rows array below.
$headers = array();

// the $rows array contains an array of rows where each row is an array
// of values for each column of the table in that row.  Additional documentation
// can be found here:
// https://api.drupal.org/api/drupal/includes%21theme.inc/function/theme_table/7
$rows = array();

// Title row
$title = '';
if ($url) {
  $title =  l(htmlspecialchars($pub->title), $url, array('attributes' => array('target' => '_blank')));
}
elseif ($dbxref and $dbxref->db_id->urlprefix) {
  $title =  l(htmlspecialchars($pub->title), $dbxref->db_id->urlprefix . $dbxref->accession, array('attributes' => array('target' => '_blank')));
}
else {
  $title =  htmlspecialchars($pub->title);
}
$rows[] = array(
  array(
    'data' => 'Title',
    'header' => TRUE,
    'width' => '20%',
  ),
  $title,
);

// Author Row.
$rows[] = array(
  array(
    'data' => 'Authors',
    'header' => TRUE
  ),
  $author_list,
);
// Type row
$rows[] = array(
  array(
    'data' => 'Type',
    'header' => TRUE
  ),
  $pub->type_id->name,
);
// Journal Title
if ($pub->series_name) {
  $rows[] = array(
    array(
      'data' => 'Journal',
      'header' => TRUE,
      'nowrap' => 'nowrap'
    ),
    $pub->series_name,
  );
}
// Volume
if ($pub->volume) {
  $rows[] = array(
    array(
      'data' => 'Volume',
      'header' => TRUE
    ),
    $pub->volume,
  );
}
// Issue
if ($pub->issue) {
  $rows[] = array(
    array(
      'data' => 'Issue',
      'header' => TRUE
    ),
    $pub->issue,
  );
}

// Now add in all the other properties.
$keywords = array();
foreach ($properties as $property) {
  // each keyword is stored as a seperate properties. We want to show them
  // only in a single field not as a bunc of individual properties, so when we see one,
  // save it in an array for later and down't add it yet to the table yet.
  if ($property->type_id->name == 'Keywords') {
    $keywords[] = $property->value;
    continue;
  }
  if ($property->type_id->name == 'Publication Type') { continue; }
  if ($property->type_id->name == 'URL') { continue; }
  
  $rows[] = array(
    array(
      'data' => $property->type_id->name,
      'header' => TRUE
    ),
    $property->value
  );
}
// now add in a single row for all keywords
if (count($keywords) > 0) {
  $rows[] = array(
    array(
      'data' => 'Keywords',
      'header' => TRUE
    ),
    implode(', ', $keywords),
  );
}

// allow site admins to see the pub ID
if (user_access('view ids')) {
  // Pub ID
  $rows[] = array(
    array(
      'data' => 'Pub ID',
      'header' => TRUE,
      'class' => 'tripal-site-admin-only-table-row',
    ),
    array(
      'data' => $pub->pub_id,
      'class' => 'tripal-site-admin-only-table-row',
    ),
  );
}

// Is Obsolete Row
if($pub->is_obsolete == TRUE){
  $rows[] = array(
    array(
      'data' => '<div class="tripal_pub-obsolete">This publication is obsolete</div>',
      'colspan' => 2
    ),
  );
}
// the $table array contains the headers and rows array as well as other
// options for controlling the display of the table.  Additional
// documentation can be found here:
// https://api.drupal.org/api/drupal/includes%21theme.inc/function/theme_table/7
$table = array(
  'header' => $headers,
  'rows' => $rows,
  'attributes' => array(
    'id' => 'tripal_pub-table-base',
    'class' => 'tripal-data-table'
  ),
  'sticky' => FALSE,
  'caption' => '',
  'colgroups' => array(),
  'empty' => '',
);

// once we have our table array structure defined, we call Drupal's theme_table()
// function to generate the table.
print theme_table($table);

if ($abstract_text) { ?>
  <br />
  <h2>Abstract</h2>
  <div style="text-align: justify"><?php print $abstract_text; ?></div> <?php
}?>

<h2>Citation</h2>
<p><?php print $pub->uniquename; ?></p>